
/****** Object:  Table [ext].[RETAILPARAMETERS]    Script Date: 8/26/2022 1:13:41 PM ******/
IF (SELECT OBJECT_ID('[ext].[RETAILPARAMETERS]')) IS NULL
BEGIN
CREATE TABLE [ext].[RETAILPARAMETERS](
	[KEY] [int] NOT NULL,
	[DATAAREAID] [nvarchar](4) NOT NULL,
	[CDCMARGINCAP] [nvarchar](4) NULL DEFAULT ((0)),
	[CDCMARGINCAPPROTECTION] [int] NULL DEFAULT ((0)),
 CONSTRAINT [PK_EXT_RETAILPARAMETERS] PRIMARY KEY CLUSTERED 
(
	[KEY] ASC,
	[DATAAREAID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[RETAILPARAMETERS] TO [DataSyncUsersRole]
GO

/****** Object:  TABLE EXT.CDCFBRINVOICEINTEGRATION    Script Date: 2/21/2023 11:02:09 PM ******/
IF (SELECT OBJECT_ID('[ext].[CDCFBRINVOICEINTEGRATION]')) IS NULL
BEGIN
CREATE TABLE [ext].[CDCFBRINVOICEINTEGRATION](
	[CDCFBRINVOICEID] [nvarchar](50) NOT NULL,
	[CDCFBRRESPONSE] [nvarchar](200) NOT NULL,
	[TRANSACTIONID] [nvarchar](44) NOT NULL,
	[DATAAREAID] [nvarchar](4) NOT NULL,
	[REPLICATIONCOUNTERFROMORIGIN] [int] IDENTITY(1,1) NOT NULL,
	[ROWVERSION] [timestamp] NOT NULL,
 CONSTRAINT [I_18877226_1679712867] PRIMARY KEY CLUSTERED 
(
	[CDCFBRINVOICEID] ASC,
	[TRANSACTIONID] ASC,
	[DATAAREAID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [I_CDCFBRINVOICEINTEGRATION_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED 
(
	[REPLICATIONCOUNTERFROMORIGIN] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [ext].[CDCFBRINVOICEINTEGRATION] ADD  DEFAULT ('') FOR [CDCFBRINVOICEID]
ALTER TABLE [ext].[CDCFBRINVOICEINTEGRATION] ADD  DEFAULT ('') FOR [CDCFBRRESPONSE]
ALTER TABLE [ext].[CDCFBRINVOICEINTEGRATION] ADD  DEFAULT ('') FOR [TRANSACTIONID]
ALTER TABLE [ext].[CDCFBRINVOICEINTEGRATION] ADD  DEFAULT ('CSDC') FOR [DATAAREAID]
END;
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[CDCFBRINVOICEINTEGRATION] TO [DataSyncUsersRole]
GO

/****** Object:  Table [ext].[CDCPRODUCTMARGINCAP]    Script Date: 8/26/2022 1:13:41 PM ******/
IF (SELECT OBJECT_ID('[ext].[CDCPRODUCTMARGINCAP]')) IS NULL
BEGIN
CREATE TABLE [ext].[CDCPRODUCTMARGINCAP](
	[RETAILSTOREID] [nvarchar](10) NULL,
	[CDCMARGINCAP] [nvarchar](10) NULL,
	[CDCMARGINCAPPROTECTION] [int] NULL,
	[CDCEXCLUDEDISCOUNT] [int] NULL,
	[DATAAREAID] [nvarchar](4) NULL,
	[RECID] [bigint] NOT NULL,
	[ITEMID] [nvarchar](20) NULL,
 CONSTRAINT [I_26583RECID] PRIMARY KEY CLUSTERED 
(
	[RECID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [ext].[CDCPRODUCTMARGINCAP] WITH CHECK ADD CHECK (([RECID]<>(0)))
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[CDCPRODUCTMARGINCAP] TO [DataSyncUsersRole]
GO

/****** Object:  Table [ext].[CDCPRODUCTVARIANTCOSTPRICE]    Script Date: 8/26/2022 1:13:41 PM ******/
IF (SELECT OBJECT_ID('[ext].[CDCPRODUCTVARIANTCOSTPRICE]')) IS NULL
BEGIN
CREATE TABLE [ext].[CDCPRODUCTVARIANTCOSTPRICE](
	[ITEMID] [nvarchar](20) NULL,
	[INVENTDIMID] [nvarchar](20) NULL,
	[COSTPRICE] [numeric](32, 6) NULL,
	[INVENTSTYLEID] [nvarchar](10) NULL,
	[INVENTSITEID] [nvarchar](10) NULL,
	[INVENTVERSIONID] [nvarchar](10) NULL,
	[INVENTLOCATIONID] [nvarchar](10) NULL,
	[INVENTCOLORID] [nvarchar](10) NULL,
	[DISTINCTPRODUCTVARIANT] [bigint] NULL,
	[RETAILVARIANTID] [nvarchar](10) NULL,
	[INVENTSIZEID] [nvarchar](10) NULL,
	[DATAAREAID] [nvarchar](4) NULL,
	[PARTITION] [bigint] NULL,
	[RECID] [bigint] NOT NULL,
	[RECVERSION] [int] NULL,
 CONSTRAINT [I_6626RECID] PRIMARY KEY CLUSTERED 
(
	[RECID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [ext].[CDCPRODUCTVARIANTCOSTPRICE] WITH CHECK ADD CHECK (([RECID]<>(0)))
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[CDCPRODUCTVARIANTCOSTPRICE] TO [DataSyncUsersRole]
GO

/****** Object:  Table [ext].[ECORESCATEGORY]    Script Date: 8/26/2022 1:13:41 PM ******/
IF (SELECT OBJECT_ID('[ext].[ECORESCATEGORY]')) IS NULL
BEGIN
CREATE TABLE [ext].[ECORESCATEGORY](
	[RECID] [bigint] NOT NULL,
	[CDCMARGINCAPPROTECTION] [int] NULL,
 CONSTRAINT [I_13572RECID] PRIMARY KEY CLUSTERED 
(
	[RECID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [ext].[ECORESCATEGORY] WITH CHECK ADD CHECK (([RECID]<>(0)))
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[ECORESCATEGORY] TO [DataSyncUsersRole]
GO

/****** Object:  Table [ext].[ECORESCATEGORYHIERARCHY]    Script Date: 8/26/2022 1:13:41 PM ******/
IF (SELECT OBJECT_ID('[ext].[ECORESCATEGORYHIERARCHY]')) IS NULL
BEGIN
CREATE TABLE [ext].[ECORESCATEGORYHIERARCHY](
	[NAME] [nvarchar](128) NULL,
	[RECID] [bigint] NOT NULL,
	[CDCMARGINCAPPROTECTION] [int] NULL,
 CONSTRAINT [I_653RECID] PRIMARY KEY CLUSTERED 
(
	[RECID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [ext].[ECORESCATEGORYHIERARCHY] WITH CHECK ADD CHECK (([RECID]<>(0)))
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[ECORESCATEGORYHIERARCHY] TO [DataSyncUsersRole]
GO

/****** Object:  Table [ext].[INVENTTABLE]    Script Date: 8/26/2022 1:13:41 PM ******/
IF (SELECT OBJECT_ID('[ext].[INVENTTABLE]')) IS NULL
BEGIN
CREATE TABLE [ext].[INVENTTABLE](
	[ITEMID] [nvarchar](20) NOT NULL,
	[DATAAREAID] [nvarchar](4) NOT NULL,
	[RECID] [bigint] NOT NULL,
	[CDCMARGINCAPPROTECTION] [int] NULL,
	[CDCPRODUCTORDERSEQUENCE] [int] NULL,
 CONSTRAINT [I_8649ITEMIDX] PRIMARY KEY CLUSTERED 
(
	[DATAAREAID] ASC,
	[ITEMID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [ext].[INVENTTABLE] WITH CHECK ADD CHECK (([RECID]<>(0)))
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[INVENTTABLE] TO [DataSyncUsersRole]
GO

/****** Object:  Table [ext].[RETAILAFFILIATION]    Script Date: 8/26/2022 1:13:41 PM ******/
IF (SELECT OBJECT_ID('[ext].[RETAILAFFILIATION]')) IS NULL
BEGIN
CREATE TABLE [ext].[RETAILAFFILIATION](
	[AFFILIATIONTYPE] [int] NOT NULL,
	[NAME] [nvarchar](64) NOT NULL,
	[RECID] [bigint] NOT NULL,
	[CDCMARGINCAPPROTECTION] [int] NOT NULL,
 CONSTRAINT [I_6710RECID] PRIMARY KEY CLUSTERED 
(
	[RECID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [ext].[RETAILAFFILIATION] WITH CHECK ADD CHECK (([RECID]<>(0)))
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[RETAILAFFILIATION] TO [DataSyncUsersRole]
GO

/****** Object:  Table [ext].[RETAILSTORETABLE]    Script Date: 8/26/2022 1:13:41 PM ******/
IF (SELECT OBJECT_ID('[ext].[RETAILSTORETABLE]')) IS NULL
BEGIN
CREATE TABLE [ext].[RETAILSTORETABLE](
	[STORENUMBER] [nvarchar](10) NULL,
	[TAXGROUPDATAAREAID] [nvarchar](4) NOT NULL,
	[RECID] [bigint] NOT NULL,
	[CDCMARGINCAPPROTECTION] [int] NULL,
	[CDCMARGINCAP] [nvarchar](3) NULL,
 CONSTRAINT [I_11898RECID] PRIMARY KEY CLUSTERED 
(
	[RECID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [ext].[RETAILSTORETABLE] WITH CHECK ADD CHECK (([RECID]<>(0)))
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[RETAILSTORETABLE] TO [DataSyncUsersRole]
GO

/****** Object: DROP Column PU 28 update Script Date: 10/31/2022 1:25:33 AM ******/
IF (COL_LENGTH('[ext].[RETAILSTORETABLE]', 'TAXGROUPDATAAREAID') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[RETAILSTORETABLE]	 
      ADD [TAXGROUPDATAAREAID] [nvarchar](4) NULL
END;
GO

IF EXISTS(
    SELECT *
    FROM sys.columns 
    WHERE Name = 'INVENTSITEID'
	AND Object_ID = Object_ID(N'ext.RETAILSTORETABLE'))
BEGIN
    ALTER TABLE [ext].[RETAILSTORETABLE]
	DROP COLUMN INVENTSITEID;
END

IF EXISTS(
    SELECT *
    FROM sys.columns 
    WHERE Name = 'INVENTLOCATIONDATAAREAID'
	AND Object_ID = Object_ID(N'ext.RETAILSTORETABLE'))
BEGIN
    ALTER TABLE [ext].[RETAILSTORETABLE]
	DROP COLUMN INVENTLOCATIONDATAAREAID;
END

/****** Object:  Table [ext].[RETAILTERMINALTABLE]    Script Date: 8/26/2022 1:13:41 PM ******/
IF (SELECT OBJECT_ID('[ext].[RETAILTERMINALTABLE]')) IS NULL
BEGIN
CREATE TABLE [ext].[RETAILTERMINALTABLE](
	[RECID] [bigint] NOT NULL,
	[STORERECID] [bigint] NOT NULL,
	[TERMINALID] [nvarchar](10) NOT NULL,
	[CDCFBRPOSREGISTRATIONID] [nvarchar](10) NOT NULL,
 CONSTRAINT [I_1485945225_417776753] PRIMARY KEY CLUSTERED 
(
	[TERMINALID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [ext].[RETAILTERMINALTABLE]  WITH CHECK ADD CHECK  (([RECID]<>(0)))
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[RETAILTERMINALTABLE] TO [DataSyncUsersRole]
GO

/****** Object:  StoredProcedure [ext].[GETMARGINCAPONLOYALTYANDSTORE]    Script Date: 8/26/2022 1:13:41 PM ******/
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'GETMARGINCAPONLOYALTYANDSTORE')  
DROP PROCEDURE [ext].[GETMARGINCAPONLOYALTYANDSTORE]
GO
CREATE PROCEDURE [ext].[GETMARGINCAPONLOYALTYANDSTORE]
     @LoyaltyId			NVARCHAR(50),
	 @StoreNumber		NVARCHAR(50),
	 @DataAreaId		NVARCHAR(50),
	 @TVP_QUERYRESULTSETTINGS [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY
AS
BEGIN
	DECLARE @IsMarginCapAllowed INT
	DECLARE @MarginCapPercentage nvarchar(3) = '0'
	DECLARE @IsAllowedOnStore INT = '0'
	DECLARE @IsAllowedOnEntity INT = '0'
	DECLARE @IsAllowedOnLoyalty INT = '0'
	DECLARE @MarginCapPercentageOnEntity nvarchar(3)
	DECLARE @MarginCapPercentageOnStore nvarchar(3)
    SET NOCOUNT ON
	
	Select @IsAllowedOnStore=CDCMARGINCAPPROTECTION, @MarginCapPercentageOnStore=CDCMARGINCAP from ext.RETAILSTORETABLE WHERE TAXGROUPDATAAREAID = @dataAreaId AND STORENUMBER = @StoreNumber
	Select @IsAllowedOnLoyalty=CDCMARGINCAPPROTECTION from ext.RETAILAFFILIATION WHERE ext.RETAILAFFILIATION.RECID = @LoyaltyId
	Select @IsAllowedOnEntity=CDCMARGINCAPPROTECTION, @MarginCapPercentageOnEntity=CDCMARGINCAP from ext.RETAILPARAMETERS Where DATAAREAID = @DataAreaId

	IF @IsAllowedOnStore = 1 AND @IsAllowedOnLoyalty = 1 AND @IsAllowedOnEntity =1
	BEGIN
		SET @IsMarginCapAllowed = 1;
    END
	ELSE
	BEGIN
		SET @IsMarginCapAllowed = 0;
    END

	IF @MarginCapPercentageOnEntity IS NOT NULL
	BEGIN
		SET @MarginCapPercentage = @MarginCapPercentageOnEntity;
    END

	IF @MarginCapPercentageOnStore IS NOT NULL
	BEGIN
		SET @MarginCapPercentage = @MarginCapPercentageOnStore;
    END

	IF @MarginCapPercentage = ''
	BEGIN
		SET @MarginCapPercentage = '0';
    END

	SELECT @IsMarginCapAllowed AS ISMARGINCAPALLOWEDONSTOREANDLOYALTY, @MarginCapPercentage AS MARGINCAPPERCENTAGE
END;
GO

/****** Object:  StoredProcedure [ext].[GETMARGINCAPONPRODUCTANDPRODUCTCATEGORY]    Script Date: 8/26/2022 1:13:41 PM ******/
SET ANSI_NULLS ON
GO
SET QUOTED_IDENTIFIER ON
GO
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'GETMARGINCAPONPRODUCTANDPRODUCTCATEGORY')  
DROP PROCEDURE [ext].[GETMARGINCAPONPRODUCTANDPRODUCTCATEGORY]
GO
CREATE PROCEDURE [ext].[GETMARGINCAPONPRODUCTANDPRODUCTCATEGORY]
     @ProductID			NVARCHAR(50),
	 @ItemId			NVARCHAR(50),
	 @StoreNumber		NVARCHAR(50),
	 @DataAreaId		NVARCHAR(50),
	 @TVP_QUERYRESULTSETTINGS [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY
AS
BEGIN
	DECLARE @IsMarginCapAllowedOnProductCategory INT
	DECLARE @IsMarginCapAllowedOnItem INT
	DECLARE @IsMarginCapAllowedExemption INT
	DECLARE @MarginCapPercentageInExemption NVARCHAR(3)
	DECLARE @ExcludeDiscount INT
	DECLARE @IsMarginCapAllowed INT

	Select @IsMarginCapAllowedOnProductCategory=ext.ECORESCATEGORY.CDCMARGINCAPPROTECTION from ax.ECORESPRODUCTCATEGORY join ext.ECORESCATEGORY on ext.ECORESCATEGORY.RECID = ax.ECORESPRODUCTCATEGORY.CATEGORY
	Where ax.ECORESPRODUCTCATEGORY.PRODUCT = @ProductID
	Select @IsMarginCapAllowedOnItem=CDCMARGINCAPPROTECTION from ext.INVENTTABLE Where ITEMID = @ItemId
	
	IF @IsMarginCapAllowedOnProductCategory = 1 AND @IsMarginCapAllowedOnItem = 1 --AND @IsMarginCapAllowedExemption = 1
	BEGIN
		SET @IsMarginCapAllowed = 1;
    END
	ELSE
	BEGIN
		SET @IsMarginCapAllowed = 0;
    END

	IF @IsMarginCapAllowed = 1 AND EXISTS(Select * from ext.CDCPRODUCTMARGINCAP Where ITEMID = @ItemId AND RETAILSTOREID=@StoreNumber AND DATAAREAID=@DataAreaId)
	BEGIN
		Select @IsMarginCapAllowedExemption=CDCMARGINCAPPROTECTION, @MarginCapPercentageInExemption=CDCMARGINCAP, @ExcludeDiscount=CDCEXCLUDEDISCOUNT  from ext.CDCPRODUCTMARGINCAP Where ITEMID = @ItemId AND RETAILSTOREID=@StoreNumber AND DATAAREAID=@DataAreaId
		SET @IsMarginCapAllowed = @IsMarginCapAllowedExemption;		
    END			

	IF @MarginCapPercentageInExemption = '' OR @MarginCapPercentageInExemption IS NULL
	BEGIN
	SET @MarginCapPercentageInExemption = '0';
	END

	IF @ExcludeDiscount IS NULL
	BEGIN
		SET @ExcludeDiscount = 0;
	END

	Select @IsMarginCapAllowed AS ISMARGINCAPALLOWED, @MarginCapPercentageInExemption AS MARGINCAPPERCENTAGE, @ExcludeDiscount AS EXCLUDEDISCOUNT

END;
GO

/****** Object:  StoredProcedure [ext].[GETMARGINCAPONPRODUCTCATEGORY]    Script Date: 8/26/2022 1:13:41 PM ******/
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'GETMARGINCAPONPRODUCTCATEGORY')  
DROP PROCEDURE [ext].[GETMARGINCAPONPRODUCTCATEGORY]
GO
CREATE PROCEDURE [ext].[GETMARGINCAPONPRODUCTCATEGORY]
     @ProductID        NVARCHAR(50),
	 @TVP_QUERYRESULTSETTINGS [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY
AS
BEGIN
    SET NOCOUNT ON

    Select ext.ECORESCATEGORY.CDCMARGINCAPPROTECTION from ax.ECORESPRODUCTCATEGORY 
	join ext.ECORESCATEGORY on ext.ECORESCATEGORY.RECID = ax.ECORESPRODUCTCATEGORY.CATEGORY
	Where ax.ECORESPRODUCTCATEGORY.PRODUCT = @ProductID
END;
GO

IF (COL_LENGTH('[ext].[CDCPRODUCTVARIANTCOSTPRICE]', 'CONFIGID') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[CDCPRODUCTVARIANTCOSTPRICE]	 
      ADD [CONFIGID] [nvarchar](100)
END	
GO

IF (COL_LENGTH('[ext].[RETAILAFFILIATION]', 'CDCMONTHLYCATLIMIT') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[RETAILAFFILIATION]	 
      ADD [CDCMONTHLYCATLIMIT] [numeric](32, 6) NULL
END	
GO

IF (COL_LENGTH('[ext].[RETAILAFFILIATION]', 'CDCPROTECTMONTHLYCAT') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[RETAILAFFILIATION]	 
      ADD [CDCPROTECTMONTHLYCAT] [int] NULL
END	
GO

IF (COL_LENGTH('[ext].[INVENTTABLE]', 'FBRHSCODE') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[INVENTTABLE]	 
      ADD [FBRHSCODE] [nvarchar](16) NULL
END	
GO

/****** Object:  StoredProcedure [ext].[SaveTransactionIvoiceId]    Script Date: 9/9/2022 6:01:33 AM ******/
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'SaveTransactionIvoiceId')  
DROP PROCEDURE [ext].[SAVETRANSACTIONIVOICEID]
GO
CREATE PROCEDURE [ext].[SAVETRANSACTIONIVOICEID]
	-- Add the parameters for the stored procedure here
	@transactionId NVARCHAR(50),
	@InvoiceId NVARCHAR(50),
	@dataAreaId NVARCHAR(50),
	@fbrResponse NVARCHAR(200)
AS
BEGIN
	DECLARE @recId bigint;
	DECLARE @REPLICATIONCOUNTER int;

	--set @REPLICATIONCOUNTER = (Select COUNT(RECID) from [ext].[CDCFBRINVOICEINTEGRATION] where TRANSACTIONID = @transactionId);
	-- SET NOCOUNT ON added to prevent extra result sets from
	-- interfering with SELECT statements.
	SET NOCOUNT ON;
	INSERT INTO [ext].[CDCFBRINVOICEINTEGRATION]
           ([CDCFBRINVOICEID]
           ,[CDCFBRRESPONSE]
           ,[TRANSACTIONID]
           ,[DATAAREAID])
     VALUES( @InvoiceId, @fbrResponse ,@transactionId, @dataAreaId);
	 
END
GO


/****** Object:  Table [ext].[RETAILLOYALTYCARD]    Script Date: 9/11/2022 3:30:55 AM ******/
IF (SELECT OBJECT_ID('[ext].[RETAILLOYALTYCARD]')) IS NULL
BEGIN
CREATE TABLE [ext].[RETAILLOYALTYCARD](
	[CARDNUMBER] [nvarchar](30) NOT NULL,
	[RECVERSION] [int] NOT NULL,
	[PARTITION] [bigint] NOT NULL,
	[RECID] [bigint] NOT NULL,
	[CDCISCARDBLOCKED] [int] NOT NULL,
	[CDCISCARDACTIVATED] [int] NOT NULL,
	[CDCACTIVATEDDATE] [datetime] NOT NULL,
 CONSTRAINT [I_9999CARDNUMBERIDX] PRIMARY KEY NONCLUSTERED 
(
	[PARTITION] ASC,
	[CARDNUMBER] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [ext].[RETAILLOYALTYCARD] ADD  CONSTRAINT [DF_RETAILLOYALTYCARD_CARDNUMBER]  DEFAULT ('') FOR [CARDNUMBER]
ALTER TABLE [ext].[RETAILLOYALTYCARD] ADD  CONSTRAINT [DF_RETAILLOYALTYCARD_RECVERSION]  DEFAULT ((1)) FOR [RECVERSION]
ALTER TABLE [ext].[RETAILLOYALTYCARD] ADD  CONSTRAINT [DF_RETAILLOYALTYCARD_PARTITION]  DEFAULT ((5637144576.)) FOR [PARTITION]
ALTER TABLE [ext].[RETAILLOYALTYCARD] ADD  DEFAULT ((0)) FOR [CDCISCARDBLOCKED]
ALTER TABLE [ext].[RETAILLOYALTYCARD] ADD  DEFAULT ((0)) FOR [CDCISCARDACTIVATED]
ALTER TABLE [ext].[RETAILLOYALTYCARD] ADD  DEFAULT ('1900-01-01 00:00:00.000') FOR [CDCACTIVATEDDATE]
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[RETAILLOYALTYCARD] TO [DataSyncUsersRole]
GO

/****** Object:  StoredProcedure [ext].[UPDATECARDACTIVATED]    Script Date: 9/11/2022 4:40:44 AM ******/
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'UpdateCardActivated')  
DROP PROCEDURE [ext].[UPDATECARDACTIVATED]
GO
CREATE PROCEDURE [ext].[UPDATECARDACTIVATED]
	-- Add the parameters for the stored procedure here
	@cardNumber NVARCHAR(50),
	@TVP_QUERYRESULTSETTINGS [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY
AS
BEGIN	
	UPDATE ext.RETAILLOYALTYCARD
	SET CDCACTIVATEDDATE = GETDATE(),
		CDCISCARDACTIVATED = 1
	WHERE CARDNUMBER = @cardNumber;
END
GO

/****** Object:  Table [ext].[CDCRFIDCARDACTIVATION]    Script Date: 9/12/2022 11:50:50 PM ******/
IF (SELECT OBJECT_ID('[ext].[CDCRFIDCARDACTIVATION]')) IS NULL
BEGIN
CREATE TABLE [ext].[CDCRFIDCARDACTIVATION](
	[CARDNUMBER] [nvarchar](30) NOT NULL,
	[CDCISCARDACTIVATED] [int] NOT NULL,
	[CDCACTIVATEDDATE] [datetime] NOT NULL,
	[DATAAREAID] [nvarchar](4) NOT NULL,
	[REPLICATIONCOUNTERFROMORIGIN] [int] IDENTITY(1,1) NOT NULL,
	[ROWVERSION] [timestamp] NOT NULL,
 CONSTRAINT [I_CARDNUMBER_CDCACTIVATEDDATE] PRIMARY KEY CLUSTERED 
(
	[CARDNUMBER] ASC,
	[CDCACTIVATEDDATE] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [ext].[CDCRFIDCARDACTIVATION] ADD  DEFAULT ('') FOR [CARDNUMBER]
ALTER TABLE [ext].[CDCRFIDCARDACTIVATION] ADD  DEFAULT ((0)) FOR [CDCISCARDACTIVATED]
ALTER TABLE [ext].[CDCRFIDCARDACTIVATION] ADD  DEFAULT ('1900-01-01 00:00:00.000') FOR [CDCACTIVATEDDATE]
ALTER TABLE [ext].[CDCRFIDCARDACTIVATION] ADD  DEFAULT ('CSDC') FOR [DATAAREAID]
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[CDCRFIDCARDACTIVATION] TO [DataSyncUsersRole]
GO

/****** Object:  StoredProcedure [ext].[UpdateCardActivated]    Script Date: 9/13/2022 2:27:37 AM ******/
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'UpdateCardActivated')  
DROP PROCEDURE [ext].[UpdateCardActivated]
GO
CREATE PROCEDURE [ext].[UpdateCardActivated]
	-- Add the parameters for the stored procedure here
	@cardNumber NVARCHAR(50),
	@dataAreaId NVARCHAR(10),
	@TVP_QUERYRESULTSETTINGS [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY
AS
BEGIN	
	
	INSERT INTO [ext].[CDCRFIDCARDACTIVATION]
          ([CARDNUMBER]
          ,[CDCISCARDACTIVATED]
          ,[CDCACTIVATEDDATE]
          ,[DATAAREAID])
    VALUES
          (@cardNumber, 1, GETDATE(), @dataAreaId)
	
END
GO

/****** Object:  Table [dbo].[INVENTDIMCOMBINATION]    Script Date: 9/23/2022 4:36:58 PM ******/
IF (SELECT OBJECT_ID('[ext].[INVENTDIMCOMBINATION]')) IS NULL
BEGIN
CREATE TABLE [ext].[INVENTDIMCOMBINATION](
	[RECID] [bigint] NOT NULL,
	[CDCMAXIMUMRETAILPRICE] [numeric](32, 6)  DEFAULT ((0)) NOT NULL,
 CONSTRAINT [DF_INVENTDIMCOMBINATION_RECID] PRIMARY KEY CLUSTERED 
(
	[RECID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[INVENTDIMCOMBINATION] TO [DataSyncUsersRole]
GO

IF (COL_LENGTH('[ext].[INVENTTABLE]', 'CDCGSTTYPE') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[INVENTTABLE]	 
      ADD [CDCGSTTYPE] [bigint] NULL
END;
GO

IF (COL_LENGTH('[ext].[INVENTTABLE]', 'CDCTOPONCART') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[INVENTTABLE]	 
      ADD [CDCTOPONCART] [int] NULL
END;
GO

/****** Object:  StoredProcedure [ext].[GETMARGINCAPONPRODUCTCATEGORY]    Script Date: 9/24/2022 11:05:36 AM ******/
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'GETTHIRDSCHEDULEPRODUCTINFO')  
DROP PROCEDURE [ext].[GETTHIRDSCHEDULEPRODUCTINFO]
GO
	CREATE PROCEDURE [ext].[GETTHIRDSCHEDULEPRODUCTINFO]
		@itemId           NVARCHAR(50),
		@variantId        NVARCHAR(50),
		@dataAreaId	   NVARCHAR(50),
		@TVP_QUERYRESULTSETTINGS [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY
	AS
	BEGIN
		SET NOCOUNT ON
		DECLARE @GstType INT
		DECLARE @MaximumRetailPrice REAL
	
		Select @GstType = ext.INVENTTABLE.CDCGSTTYPE from ext.INVENTTABLE WHERE ext.INVENTTABLE.ITEMID = @itemId
	
		IF @GstType = NULL
		BEGIN
			SET @GstType = 0;
		END
	
		IF @GstType != 0
		BEGIN
			Select @MaximumRetailPrice = I1.CDCMAXIMUMRETAILPRICE from ext.INVENTDIMCOMBINATION I1
			join ax.INVENTDIMCOMBINATION I2 ON I2.RECID = I1.RECID
			WHERE I2.ITEMID = @itemId AND I2.RETAILVARIANTID = @variantId AND I2.DATAAREAID = @dataAreaId
		END
		ELSE
		BEGIN
			SET @MaximumRetailPrice = 0;
		END
	
		SELECT @GstType AS GSTTYPE, @MaximumRetailPrice AS MAXIMUMRETAILPRICE
	END;
GO

/****** Object:  Table [ext].[CDCGSTTYPEDISCOUNTPRIORITY]    Script Date: 9/26/2022 11:44:37 AM ******/
IF (SELECT OBJECT_ID('[ext].[CDCGSTTYPEDISCOUNTPRIORITY]')) IS NULL
BEGIN
CREATE TABLE [ext].[CDCGSTTYPEDISCOUNTPRIORITY](
	[CDCGSTTYPE] [int] NOT NULL,
	[CDCITEMGSTNAME] [nvarchar](10) NOT NULL,
	[CDCPRICINGPRIORITY] [int] NOT NULL,
	[DATAAREAID] [nvarchar](4) NOT NULL,
	[RECID] [bigint] NOT NULL,
 CONSTRAINT [I_CDCGSTTYPEDISCOUNTPRIORITY_RECID] PRIMARY KEY CLUSTERED 
(
	[RECID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[CDCGSTTYPEDISCOUNTPRIORITY] TO [DataSyncUsersRole]
GO


/****** Object:  StoredProcedure [ext].[GETPRODUCTVARIANTSUSINGBARCODE]    Script Date: 10/29/2022 5:43:33 PM ******/
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'GETPRODUCTVARIANTSUSINGBARCODE')  
DROP PROCEDURE [ext].[GETPRODUCTVARIANTSUSINGBARCODE]
GO
CREATE PROCEDURE [ext].[GETPRODUCTVARIANTSUSINGBARCODE]
	 @ProductNumber		NVARCHAR(50),
     @BarcodeNumber		NVARCHAR(50),
	 @DataAreaId		NVARCHAR(50),
	 @TVP_QUERYRESULTSETTINGS [crt].[QUERYRESULTSETTINGSTABLETYPE] READONLY
AS
BEGIN

	SELECT DISTINCT INVENTSIZEID,INVENTCOLORID,INVENTSTYLEID,CONFIGID
		FROM [ax].[INVENTITEMBARCODE] I1
		join [ax].[INVENTDIM] I2 on I2.INVENTDIMID = I1.INVENTDIMID
		join [ax].[INVENTTABLE] I3 on I3.ITEMID = I1.ITEMID
		where I3.PRODUCT = @ProductNumber AND I1.ITEMBARCODE = @BarcodeNumber AND I3.DATAAREAID = @DataAreaId
END;
GO

/****** Object: DROP Column from ext.RETAILPARAMETERS Script Date: 10/31/2022 1:25:33 AM ******/
IF EXISTS(
    SELECT *
    FROM sys.columns 
    WHERE Name = 'CDCFBRSERVERURL'
      AND Object_ID = Object_ID(N'ext.RETAILPARAMETERS'))
BEGIN
    ALTER TABLE ext.RETAILPARAMETERS
	DROP COLUMN CDCFBRSERVERURL;
END

IF EXISTS(
    SELECT *
    FROM sys.columns 
    WHERE Name = 'CDCFBRSERVICECHECKURL'
      AND Object_ID = Object_ID(N'ext.RETAILPARAMETERS'))
BEGIN
    ALTER TABLE ext.RETAILPARAMETERS
	DROP COLUMN CDCFBRSERVICECHECKURL;
END

IF (COL_LENGTH('[ext].[RETAILSTORETABLE]', 'CDCFBRSERVERURL') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[RETAILSTORETABLE]	 
      ADD [CDCFBRSERVERURL] [varchar](150) NULL
END;
GO

IF (COL_LENGTH('[ext].[RETAILSTORETABLE]', 'CDCFBRSERVICECHECKURL') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[RETAILSTORETABLE]	 
      ADD [CDCFBRSERVICECHECKURL] [varchar](150) NULL
END;
GO

/****** Object: DROP Column from ext.CDCRFIDCARDACTIVATION Script Date: 11/11/2022 1:25:33 AM ******/
IF (COL_LENGTH('[ext].[CDCRFIDCARDACTIVATION]', 'REPLICATIONCOUNTERFROMORIGIN') IS NOT NULL)			 
BEGIN 
ALTER TABLE [ext].[CDCRFIDCARDACTIVATION]
DROP COLUMN REPLICATIONCOUNTERFROMORIGIN
END;

IF (COL_LENGTH('[ext].[CDCRFIDCARDACTIVATION]', 'REPLICATIONCOUNTERFROMORIGIN') IS NULL)			 
BEGIN 
ALTER TABLE [ext].[CDCRFIDCARDACTIVATION]
ADD [REPLICATIONCOUNTERFROMORIGIN] [int] IDENTITY(1,1) NOT NULL
END;

/****** Object:  Index [IX_LOGISTICSLOCATION_ISPOSTAL_0_PARENTLOC_ABOVE0_RECID]    Script Date: 15/12/2022 5:34:25 pm ******/
IF EXISTS (SELECT *  FROM sys.indexes  WHERE name='IX_LOGISTICSLOCATION_ISPOSTAL_0_PARENTLOC_ABOVE0_RECID' 
    AND object_id = OBJECT_ID('[ax].[LOGISTICSLOCATION]'))
	DROP INDEX [IX_LOGISTICSLOCATION_ISPOSTAL_0_PARENTLOC_ABOVE0_RECID] ON [ax].[LOGISTICSLOCATION]
GO

IF NOT EXISTS (SELECT *  FROM sys.indexes  WHERE name='IX_LOGISTICSLOCATION_ISPOSTAL_0_PARENTLOC_ABOVE0_RECID' 
    AND object_id = OBJECT_ID('[ax].[LOGISTICSLOCATION]'))
BEGIN
	CREATE NONCLUSTERED INDEX [IX_LOGISTICSLOCATION_ISPOSTAL_0_PARENTLOC_ABOVE0_RECID] ON [ax].[LOGISTICSLOCATION]
	(
		[ISPOSTALADDRESS] ASC,
		[PARENTLOCATION] ASC,
		[RECID] ASC
	)
	WHERE ([PARENTLOCATION]>(0) AND [ISPOSTALADDRESS]=(0))
	WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, SORT_IN_TEMPDB = OFF, DROP_EXISTING = OFF, ONLINE = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
End;
GO

/****** Object:  Table [ext].[ECORESCONFIGURATION]    Script Date: 12/29/2022 5:16:53 PM ******/
IF (SELECT OBJECT_ID('[ext].[ECORESCONFIGURATION]')) IS NULL
BEGIN
CREATE TABLE [ext].[ECORESCONFIGURATION](
	[RECID] [bigint] NOT NULL,
	[NAME] [nvarchar](120) NOT NULL,
	[OPCAT] [int] NOT NULL,
	[PROMO] [int] NOT NULL
 CONSTRAINT [EXT_ECORESCONFIGURATION_RECID] PRIMARY KEY CLUSTERED 
(
	[RECID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [I_1043434429_5166647201] UNIQUE NONCLUSTERED 
(
	[NAME] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[ECORESCONFIGURATION] TO [DataSyncUsersRole]
GO


IF OBJECT_ID('ext.DF_ECORESCONFIGURATION_NAME_EXT') IS NULL
   ALTER TABLE [ext].[ECORESCONFIGURATION] 
	ADD  CONSTRAINT [DF_ECORESCONFIGURATION_NAME_EXT]  DEFAULT ('') FOR [NAME]
GO

/****** Object:  Table [ext].[INVENTTABLE]    Script Date: 1/19/2023 5:16:53 PM ******/
IF (COL_LENGTH('[ext].[INVENTTABLE]', 'CDCEHSASPROGRAMCODE') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[INVENTTABLE]	 
      ADD [CDCEHSASPROGRAMCODE] [NVARCHAR](3) NULL
END;
GO

/****** Object:  Table [ext].[RETAILSTORETABLE]    Script Date: 1/24/2023 5:16:53 PM ******/
IF (COL_LENGTH('[ext].[RETAILSTORETABLE]', 'CDCMERCHANTID') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[RETAILSTORETABLE]	 
      ADD [CDCMERCHANTID] [NVARCHAR](50) NULL
END;
GO


/****** Object:  Table [ext].[RETAILPARAMETERS]    Script Date: 1/24/2023 5:16:53 PM ******/
IF (COL_LENGTH('[ext].[RETAILPARAMETERS]', 'CDCEHSASPROGRAMAUTHENTICATIONLINK') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[RETAILPARAMETERS]	 
      ADD [CDCEHSASPROGRAMAUTHENTICATIONLINK] [NVARCHAR](50) NULL
END;
GO

IF (COL_LENGTH('[ext].[RETAILPARAMETERS]', 'CDCEHSASPROGRAMBENEVERIFICATIONLINK') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[RETAILPARAMETERS]	 
      ADD [CDCEHSASPROGRAMBENEVERIFICATIONLINK] [NVARCHAR](50) NULL
END;
GO

IF (COL_LENGTH('[ext].[RETAILPARAMETERS]', 'CDCEHSASPROGRAMSUBSIDYINQUIRYLINK') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[RETAILPARAMETERS]	 
      ADD [CDCEHSASPROGRAMSUBSIDYINQUIRYLINK] [NVARCHAR](50) NULL
END;
GO

IF (COL_LENGTH('[ext].[RETAILPARAMETERS]', 'CDCEHSASPROGRAMSUBSIDYPAYMENTLINK') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[RETAILPARAMETERS]	 
      ADD [CDCEHSASPROGRAMSUBSIDYPAYMENTLINK] [NVARCHAR](50) NULL
END;
GO


IF (COL_LENGTH('[ext].[RETAILPARAMETERS]', 'CDCEHSASPROGRAMSUBSIDYPAYMENTINQUIRYLINK') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[RETAILPARAMETERS]	 
      ADD [CDCEHSASPROGRAMSUBSIDYPAYMENTINQUIRYLINK] [NVARCHAR](50) NULL
END;
GO

IF (COL_LENGTH('[ext].[RETAILPARAMETERS]', 'CDCEHSASPROGRAMRESENDOTPLINK') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[RETAILPARAMETERS]	 
      ADD [CDCEHSASPROGRAMRESENDOTPLINK] [NVARCHAR](50) NULL
END;
GO

IF (COL_LENGTH('[ext].[RETAILPARAMETERS]', 'CDCEHSASPROGRAMUSERNAME') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[RETAILPARAMETERS]	 
      ADD [CDCEHSASPROGRAMUSERNAME] [NVARCHAR](50) NULL
END;
GO

IF (COL_LENGTH('[ext].[RETAILPARAMETERS]', 'CDCEHSASPROGRAMPASSWORD') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[RETAILPARAMETERS]	 
      ADD [CDCEHSASPROGRAMPASSWORD] [NVARCHAR](50) NULL
END;
GO

IF (COL_LENGTH('[ext].[RETAILPARAMETERS]', 'CDCEHSASPROGRAMCHANNEL') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[RETAILPARAMETERS]	 
      ADD [CDCEHSASPROGRAMCHANNEL] [NVARCHAR](50) NULL
END;
GO

/****** Object:  Table [ext].[INVENTTABLE]    Script Date: 1/24/2023 5:16:53 PM ******/
IF (COL_LENGTH('[ext].[INVENTTABLE]', 'CDCEHSASPROGRAMCODE') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[INVENTTABLE]	 
      ADD [CDCEHSASPROGRAMCODE] [NVARCHAR](10) NULL
END;
GO

/****** Object:  Table [ext].[INVENTTABLE]    Script Date: 1/24/2023 5:16:53 PM ******/
IF (COL_LENGTH('[ext].[INVENTTABLE]', 'CDCISEHSASPROGRAMPRODUCT') IS NULL)			 
BEGIN   
	  ALTER TABLE [ext].[INVENTTABLE]	 
      ADD [CDCISEHSASPROGRAMPRODUCT] [INT] NULL
END;
GO

/****** Object:  Table [ext].[CDCEHSAASPROGRAMMEINTEGRATION]    Script Date: 21/02/2023 1:00:28 am ******/
IF (SELECT OBJECT_ID('[ext].[CDCEHSAASPROGRAMMEINTEGRATION]')) IS NULL
BEGIN
CREATE TABLE [ext].[CDCEHSAASPROGRAMMEINTEGRATION](
	[INFORMATION] [nvarchar](max) NULL,
	[INFORMATIONCODE] [nvarchar](100) NOT NULL,
	[TRANSACTIONID] [nvarchar](44) NOT NULL,
	[DATAAREAID] [nvarchar](4) NOT NULL,
	[REPLICATIONCOUNTERFROMORIGIN] [int] IDENTITY(1,1) NOT NULL,
	[ROWVERSION] [timestamp] NOT NULL,
 CONSTRAINT [I_18877227_1679712867] PRIMARY KEY CLUSTERED 
(
	[INFORMATIONCODE] ASC,
	[TRANSACTIONID] ASC,
	[DATAAREAID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY],
 CONSTRAINT [I_CDCEHSAASPROGRAMMEINTEGRATION_REPLICATIONCOUNTERFROMORIGIN] UNIQUE NONCLUSTERED 
(
	[REPLICATIONCOUNTERFROMORIGIN] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [ext].[CDCEHSAASPROGRAMMEINTEGRATION] ADD  DEFAULT ('') FOR [INFORMATION]
ALTER TABLE [ext].[CDCEHSAASPROGRAMMEINTEGRATION] ADD  DEFAULT ('') FOR [INFORMATIONCODE]
ALTER TABLE [ext].[CDCEHSAASPROGRAMMEINTEGRATION] ADD  DEFAULT ('') FOR [TRANSACTIONID]
ALTER TABLE [ext].[CDCEHSAASPROGRAMMEINTEGRATION] ADD  DEFAULT ('CSDC') FOR [DATAAREAID]
END;
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[CDCEHSAASPROGRAMMEINTEGRATION] TO [DataSyncUsersRole]
GO

/****** Object:  StoredProcedure [ext].[SAVEEHSAASPROGRAMMEINFORMATION]    Script Date: 9/9/2022 6:01:33 AM ******/
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'SaveEhsaasProgrammeInformation')  
DROP PROCEDURE [EXT].[SAVEEHSAASPROGRAMMEINFORMATION]
GO
CREATE PROCEDURE [EXT].[SAVEEHSAASPROGRAMMEINFORMATION]
	-- Add the parameters for the stored procedure here
	@transactionId NVARCHAR(50),
	@dataAreaId NVARCHAR(50),
	@InformationCode NVARCHAR(100),
	@Information NVARCHAR(MAX)
AS
BEGIN
	IF EXISTS (SELECT * FROM [ext].[CDCEHSAASPROGRAMMEINTEGRATION] E1 WHERE E1.TRANSACTIONID = @transactionId AND E1.INFORMATIONCODE = @InformationCode) 
		BEGIN
			UPDATE [ext].[CDCEHSAASPROGRAMMEINTEGRATION]
			SET INFORMATION = CONCAT(INFORMATION, ' ', @Information)
			WHERE TRANSACTIONID = @transactionId AND INFORMATIONCODE = @InformationCode;
			
		END
	ELSE
		BEGIN
		INSERT INTO [ext].[CDCEHSAASPROGRAMMEINTEGRATION]
           ([INFORMATION]
           ,[INFORMATIONCODE]
           ,[TRANSACTIONID]
           ,[DATAAREAID])
		VALUES( @Information, @InformationCode ,@transactionId, @dataAreaId);
		END;
END;
GO

/****** Object:  Table [dbo].[INVENTDIMCOMBINATION]    Script Date: 28/02/2023 4:36:58 PM ******/
IF (SELECT OBJECT_ID('[ext].[CDCLASTTRANSACTIONDATETIME]')) IS NULL
BEGIN
CREATE TABLE [ext].[CDCLASTTRANSACTIONDATETIME](
	[TRANSACTIONID] [NVARCHAR](100) NOT NULL,
	[CREATEDDATETIME] [NVARCHAR](100) NOT NULL,
 CONSTRAINT [DF_CDCLASTTRANSACTIONDATETIME_TRANSACTIONID] PRIMARY KEY CLUSTERED 
(
	[TRANSACTIONID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[ext].[CDCLASTTRANSACTIONDATETIME] TO [DataSyncUsersRole]
GO

/****** Object:  StoredProcedure [ext].[SAVELASTTRANSACTIONDATETIME]    Script Date: 28/02/2023 6:01:33 AM ******/
IF EXISTS (SELECT * FROM sys.objects WHERE type = 'P' AND name = 'SAVELASTTRANSACTIONDATETIME')  
DROP PROCEDURE [EXT].[SAVELASTTRANSACTIONDATETIME]
GO
CREATE PROCEDURE [EXT].[SAVELASTTRANSACTIONDATETIME]
	-- Add the parameters for the stored procedure here
	@transactionId NVARCHAR(100),
	@createdDateTime NVARCHAR(100)
AS
BEGIN
	IF EXISTS (SELECT * FROM [ext].[CDCLASTTRANSACTIONDATETIME] ) 
		BEGIN
			UPDATE [ext].[CDCLASTTRANSACTIONDATETIME]
			SET TRANSACTIONID = @transactionId, CREATEDDATETIME = @createdDateTime
		END
	ELSE
		BEGIN
		INSERT INTO [ext].[CDCLASTTRANSACTIONDATETIME]
           ([TRANSACTIONID]
           ,[CREATEDDATETIME])
		VALUES( @transactionId, @createdDateTime);
		END;
END;
GO

/****** Object:  Table [ext].[RETAILFUNCTIONALITYPROFILE]    Script Date: 08/03/2023 11:31:15 AM ******/
IF (SELECT OBJECT_ID('[EXT].[RETAILFUNCTIONALITYPROFILE]')) IS NULL
BEGIN
CREATE TABLE [EXT].[RETAILFUNCTIONALITYPROFILE](
	[RECID] [bigint] NOT NULL,
	[PROFILEID] [nvarchar](10) NOT NULL,
	[ALLOWEDDAYSRETURN] [int] NOT NULL
 CONSTRAINT [I_RETAILFUNCTIONALITYPROFILE_26583PROFILEID] PRIMARY KEY CLUSTERED 
(
	[PROFILEID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON) ON [PRIMARY]
) ON [PRIMARY]
ALTER TABLE [EXT].[RETAILFUNCTIONALITYPROFILE] ADD  CONSTRAINT [EXT_RETAILFUNCTIONALITYPROFILE_PROFILEID]  DEFAULT ('') FOR [PROFILEID]
END
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[EXT].[RETAILFUNCTIONALITYPROFILE] TO [DataSyncUsersRole]
GO

/****** Object:  Table [ext].[CDCLASTTRANSACTIONDATETIME]  Script Date: 08/03/2023 11:31:15 AM ******/
IF (SELECT OBJECT_ID('[ext].[CDCLASTTRANSACTIONDATETIME]')) IS NOT NULL
BEGIN
TRUNCATE TABLE [ext].[CDCLASTTRANSACTIONDATETIME]
INSERT INTO [ext].[CDCLASTTRANSACTIONDATETIME]
           ([TRANSACTIONID]
           ,[CREATEDDATETIME])
     VALUES
           (' ' 
           ,REPLACE(convert(varchar, getdate(), 29),'-','/'))
END;
GO

/****** Object:  Table [EXT].[CDCPRODUCTFRACTIONALSALE]    Script Date: 08/03/2023 6:55:05 PM ******/
IF (SELECT OBJECT_ID('[EXT].[CDCPRODUCTFRACTIONALSALE]')) IS NULL
BEGIN
CREATE TABLE [ext].[CDCPRODUCTFRACTIONALSALE](
	[CATEGORY] [bigint] NOT NULL,
	[PRODUCT] [bigint] NOT NULL,
	[VARIANT] [bigint] NOT NULL,
	[CATEGORYHIERARCHY] [bigint] NOT NULL,
	[RECID] [bigint] NOT NULL,
	[REFRECID] [bigint] NOT NULL,
	[STORENUMBER] [nvarchar](10) NOT NULL,
	[NAME] [nvarchar](50) NOT NULL,
	[LINETYPE] [int] NOT NULL,
 CONSTRAINT [I_CDCPRODUCTFRACTIONALSALE_RECID] PRIMARY KEY CLUSTERED 
(
	[RECID] ASC
)WITH (PAD_INDEX = OFF, STATISTICS_NORECOMPUTE = OFF, IGNORE_DUP_KEY = OFF, ALLOW_ROW_LOCKS = ON, ALLOW_PAGE_LOCKS = ON, OPTIMIZE_FOR_SEQUENTIAL_KEY = OFF) ON [PRIMARY]
) ON [PRIMARY]
END;
GO
GRANT SELECT, INSERT, UPDATE, DELETE ON OBJECT::[EXT].[CDCPRODUCTFRACTIONALSALE] TO [DataSyncUsersRole]
GO